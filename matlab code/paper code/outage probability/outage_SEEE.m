clc
close all
clear
V1=[20,32,22,38,58];%发送车的速度
% V1=[30,30,30,30,30];%发送车的速度
V2=[0,0,0,0,0];%接收基站的速度
nub_a=1.5;
nub_b=0.1;
CE=linspace(0,0,5);
v=zeros(5,5);%车与基站之间的相对速度矩阵
h=zeros(5,5);%车与基站之间的先前时刻的值
for i=1:5
    for j=1:5
        v(i,j)=abs(V1(i)-V2(j));
        h(i,j)=1+0.3*rand(1);
    end
end
% v=[6,1,4,0,3;0,7,2,6,9;8,1,6,2,1;10,3,8,4,1;0,7,2,6,9];
v1=zeros(5,5);
h=[0.845418353066450,0.995224514302217,0.687960311535798,0.741632431164121,0.706496751675251;0.716599213586070,0.675355816604331,0.609143849450247,0.779761672779394,0.697456077357881;0.947490617895953,0.811444306977048,0.965654067256766,0.989572070823563,0.834170383464932;0.647590153069472,0.970613035572538,0.837424308992463,0.953446121969907,0.769790372435062;0.842902954353616,0.628305432990921,0.969908972473279,0.856831766456680,0.641799867159030];
T=0.001;%采样周期
c=3*1e+8;%光速
fc=5.9*1e+9;%多普勒频移中心频率
j1=2*pi*fc*T/c*v;%0阶贝塞尔函数参数（V2V）
epsi=besselj(0,j1);%求贝塞尔函数值（V2V）
j2=2*pi*fc*T/c*v1;
epsi1=besselj(0,j2);
a=(epsi.^2).*h;%车车通信移动信道快衰落的模型中的CSI反馈部分（先前时刻的信道状态信息）
a1=(epsi1.^2).*h;
Delta=1e-6;%背景噪声
Ith1=2.6e-6;
Ith2=2.6e-6;
Ith3=1.8e-6;
Ith4=1.8e-6;
%   l=0.0001;%车车通信慢衰落系数 
%   G1=l*a;%先前时刻测得的信道增益值
%   G2=l*a1
 Nunber1=zeros(5,5);
 Nunber2=zeros(5,5);
 Nunber3=zeros(5,5);
 Nunber4=zeros(5,5);
 P1=[0.00371453533845990,0.00371262398199078,0.00325146753859310,0.00320549603379661,0.00331690911482253];%%完美的CSI下的SE中断概率有移动性的
 P2=[0.00364734724660304,0.00397698137885111,0.00319488346692982,0.00354008771217896,0.00336462248990917];%无移动性的
 P3=[0.00198065739192357,0.00198860664368462,0.00189753279585572,0.00191129742626258,0.00189728597171864];%%完美的CSI下的EE中断概率有移动性的
 P4=[0.00204606177024628,0.00206986456587306,0.00195058577353219,0.00203288375856559,0.00193113274833620];%%完美的CSI下的EE中断概率无移动性的
 for t=1:10000 %重复实验的次数
      g1=zeros(5,5);
      g2=zeros(5,5);
      G=zeros(5,5);%当前时刻实时的信道增益值
      GG=zeros(5,5);%当前时刻实时的信道增益值
      Q=zeros(5,5);
      Q1=zeros(5,5);
      m = 0.0007;
      n= 0.01;
      mu = log((m^2)/sqrt(n+m^2));
      sigma = sqrt(log(n/(m^2)+1));
      [M,V]= lognstat(mu,sigma);
      Shadow= lognrnd(mu,sigma,5,5);
      Q=Shadow.*(1-epsi.^2);
      Q1=Shadow.*(1-epsi1.^2);
      G1=Shadow.*a;%先前时刻测得的信道增益值
      G2=Shadow.*a1;
    for i=1:5
        for j=1:5
            g1(i,j)=exprnd(Q(i));       
        end
    end
    G=G1+g1;%产生的当前时刻实时的V2V信道增益值
    GG=G2;
    for i=1:5
        G(i,i)=0;%为了让G成为干扰增益矩阵
        GG(i,i)=0;
    end
    for j=1:5
        I1(j)=P1*G(:,j);
        I3(j)=P3*G(:,j);
        I2(j)=P2*GG(:,j);
        I4(j)=P4*GG(:,j);
        if I1(j)<=Ith1
           Nunber1(j)= Nunber1(j)+1;
        end
        if I2(j)<=Ith2
           Nunber2(j)= Nunber2(j)+1;
        end
        if I3(j)<=Ith3
           Nunber3(j)= Nunber3(j)+1;
        end
        if I4(j)<=Ith4
           Nunber4(j)= Nunber4(j)+1;
        end
    end 
end    
%% ----------------------------------------------概率验证-------------------------------------------%%
t1=zeros(5,1);
t2=zeros(5,1);
t3=zeros(5,1);
t4=zeros(5,1);
    for j=1:5
    t1(j)=(10000-Nunber1(j))/10000;
    t2(j)=(10000-Nunber2(j))/10000;
    t3(j)=(10000-Nunber3(j))/10000;
    t4(j)=(10000-Nunber4(j))/10000;
    end
    x=[0,6];
    y=[10,10];
    User=linspace(1,5,5);
    x_total=[100*t1,100*t2,100*t3,100*t4];
bar(User,x_total) 
ylim([0 40]);
hold on
% plot(x,y,'-r','linewidth',1.5);
legend('perfect CSI with Doppler effect, C=0.1', 'perfect CSI without Doppler effect, C=0.1', 'perfect CSI with Doppler effect, C=C^*','perfect CSI without Doppler effect, C=C^*')
xlabel('Indexes of CH','FontSize',12);
ylabel('Real outage percentage(%) ','FontSize',12);
set(gca,'FontSize',11);