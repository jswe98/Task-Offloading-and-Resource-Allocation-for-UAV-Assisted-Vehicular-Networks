clc;
clear;
close all;
f=2000;
kfi=10^3.7;%室内链路
kfo=10^((30*log10(f)-71)/10);%跨层干扰链路
kfm=10^5;%MUE到MBS的信道链路
W=10^4;%分区损耗
Rf=30;%FBS的工作半径
Rm=300;%MBS的工作半径
af0=1.4;%室内损耗
af1=1.4;%室内到室外损耗
af2=1.4;%室内到室外损耗
af3=1.4;%室外MUE的传输损耗
h=10^(-6);%背景噪声

Ith=1e-3;%最低信噪比,rm*=10lgYm=10lg(10^0.5)=5dB   0.3
e1=0.1;%中断概率阈值   约束1  0.05
n=9;%FBS数量
nn=1;%MBS数量
k=n+1;%n+1所有基站数量

w=10;%速率单价
c=1;%成本单价
k1=0.1;%迭代步长
K=20;%迭代次数
p=linspace(0.00000001,0.00000001,k)';%生成初始最大功率向量,(0.5,0.5)取25个0.5,"p=linspace(0.5,0.5,26)"或者表示为"p=0.5*ones(1,26)"
P_sum=[];

%%%%%%%%%%%%%%%%%%%%%%%求解信道增益%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% % MBS_x=0;
% % MBS_y=0;%MUE和FUE一起计算坐标，因为功率也一起计算的
% ang1=2*pi*rand(1,k);%产生n个(0,1)的随机数,(0,2pi)的弧度值
% R1=Rm*rand(1,k);%MBS半径
% FBS_x=cos(ang1).*R1;
% FBS_y=sin(ang1).*R1;%设置FBS坐标
% FBS_x(1)=0;
% FBS_y(1)=0;%给FBS的第一个元素赋值
% ang2=2*pi*rand(1,k);
% R2=Rf*rand(1,k);%FBS半径
% FBS_user_x=FBS_x+cos(ang2).*R2;
% FBS_user_y=FBS_y+sin(ang2).*R2;%设置FUE坐标

mydata=load('tuopu_5.mat');%保存数据,调用数据
FBS_x=mydata.FBS_x;
FBS_y=mydata.FBS_y;
FBS_user_x=mydata.FBS_user_x;
FBS_user_y=mydata.FBS_user_y;

% FBS_user_x=[14.0562,-34.5844033101770,58.1851229781225,-53.3067412043940,75.9670055099422,-145.915136624776,-135.266223292212,-33.9530974333623,93.7795847314104,-272.004925352190,-64.1762379938583];%功率收敛图5
% FBS_user_y=[6.0241,15.4215760202596,174.015979421497,93.0669523320008,70.4278017918949,116.564054553372,221.888767605664,50.7062888722617,-183.018258279924,-75.7405148690301,-8.11617670626607];
% FBS_x=[0,-32.6369228290361,49.9005323075476,-46.2794815103154,76.9975742129043,-122.055352007192,-124.724490397195,-32.5810834763116,82.5764121387028,-265.205521796300,-59.2217648372471];
% FBS_y=[0,15.3789899363559,180.877989825883,93.1294131764467,64.4102908665631,121.733596794225,227.197587536926,49.8691229739999,-184.060487422776,-53.5071505529328,-7.90601281925403];



D=zeros(k,k);%赋值零矩阵,距离
G=zeros(k,k);%赋值信道增益矩阵

for i=1:k
    for j=1:k
        D(i,j)=sqrt((FBS_user_x(j)-FBS_x(i))^2+(FBS_user_y(j)-FBS_y(i))^2);
    end
end
for i=1:k
    for j=1:k
        if (i==1)&&(j==1)%MUE与MBS间距 g00
            G(1,1)=10*W*50^(-af0);
        elseif i==j%"elseif"中间没有空格是条件并列,"else if+判断条件"中间有空格是嵌套
            G(i,i)=W*15^(-af3);%FUE与FBS gii
        elseif (i==1)&&(j>1)
            G(1,j)=W*D(1,j)^(-af1);%MUE与FBS gi0
        elseif (i>1)&&(j==1)
            G(i,1)=W*D(i,1)^(-af2);%FUE与MBS g0j  全按室外路损计算
        else
            G(i,j)=W*D(i,j)^(-af3);%       gij
        end
    end
end
%G=[0.00214659134317349,0.000152589581186485,0.000171850515933178,3.56000744820583e-05,0.000262921519089387;0.000152589581186485,0.0111540158083920,0.000401377171333758,0.000606511160898699,0.000904457996085407;0.000171850515933178,0.000401377171333758,0.0102037068533520,0.000632430244816523,0.000402236141071575;3.56000744820583e-05,0.000606511160898699,0.000632430244816523,0.00767555612634781,0.000983844434469935;0.000262921519089387,0.000904457996085407,0.000402236141071575,0.000983844434469935,0.0175450314058574;]
%%%%%%%%%%%%%%%%%%求解功率%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Pmax=0.5;%FUE最大功率值
pow=p;%对瞬时功率赋初值，11*1列向量

s=zeros(k,K);
for i=1:k
    s(i,1)=1;
end


for t=1:K-1  %迭代循环
    for i=1:k
       % pow(i,2)=0.2;%让绘图时的功率不是从0开始,pow(i,2)
        QQ=w/(c-s(i,t)*G(i,i))/log(2)-(G(i,:)*p-G(i,i)*p(i)+h)/G(i,i);
        QQ=-QQ
        p(i)=min(max(QQ,0),Pmax);%给p赋值
        s(i,t+1)=max(s(i,t)-k1/sqrt(t)*((G(i,:)*p-G(i,i)*p(i))*log(e1)+Ith),0);
    end

    pow(:,t+1)=p;%每次迭代所有用户功率
    error=max(abs(pow(:,t+1)-pow(:,t)));
    if error<=4e-9
        pow(:,t+1)=pow(:,t);
    end
    Pend=pow(:,size(pow,2));%这个值应该和p(i)一样
    
  
S1=0;
S2=0;
S=0;
for i=2:k
    SINR(i)=G(i,i)*Pend(i)/(G(i,:)*Pend-G(i,i)*Pend(i)+h);
    T(i)=w*log(1+SINR(i));
    utility(i)=T(i); %每个用户的效用函数
    S1=S1+T(i);


end
 S1;  %系统总效用     
end

%%%%%%%%%%%%绘图%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

plot((pow(1,:)),'-og');
hold on
plot((pow(2,:)),'-+r');
plot((pow(3,:)),'-*b');
plot((pow(4,:)),'-sk');
plot((pow(5,:)),'-dc');
plot((pow(6,:)),'-+r');
plot((pow(7,:)),'-*b');
plot((pow(8,:)),'-sk');
plot((pow(9,:)),'-dc');
plot((pow(10,:)),'-+r');


legend('MUE','P1','P2','P3','P4')
xlabel('iteration');
ylabel('Power conversion value(W)');  

%S1=[14.7721039068797]

